// <auto-generated />
using System;
using ESISA.Infrastructure.Persistence.EntityFramework.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ESISA.Infrastructure.Persistence.EntityFramework.Migrations
{
    [DbContext(typeof(ESISADbContext))]
    [Migration("20230307025939_mig_demand_entities_creation")]
    partial class mig_demand_entities_creation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ESISA.Core.Domain.Entities.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CityId");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CountryId");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("Details");

                    b.Property<Guid>("DistrictId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DistrictId");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("PostalCode");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("DistrictId");

                    b.ToTable("Addresses", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.Advert", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.ToTable("Adverts", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.AdvertPhotoPath", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("AdvertId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AdvertId");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("PhotoPath");

                    b.HasKey("Id");

                    b.HasIndex("AdvertId");

                    b.ToTable("AdvertPhotoPaths", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.Brand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("Name");

                    b.Property<string>("WebsiteUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("WebsiteUrl");

                    b.HasKey("Id");

                    b.ToTable("Brands", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.BrandDemand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("BrandName");

                    b.Property<Guid>("CorporateDealerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CorporateDealerId");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("SenderNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("SenderNote");

                    b.HasKey("Id");

                    b.HasIndex("CorporateDealerId");

                    b.ToTable("BrandDemands", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.BrandPhotoPath", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BrandId");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("PhotoPath");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("BrandPhotoPaths", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("Name");

                    b.Property<Guid?>("ParentCategoryId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ParentCategoryId");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Cagtegories", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.CategoryDemand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("CategoryName");

                    b.Property<Guid>("CorporateDealerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CorporateDealerId");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("SenderNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("SenderNote");

                    b.HasKey("Id");

                    b.HasIndex("CorporateDealerId");

                    b.ToTable("CategoryDemands", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.CategoryPhotoPath", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CategoryId");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("PhotoPath");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("CategoryPhotoPaths", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CountryId");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.CompletedOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("OrderId");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("CompletedOrders", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.CorporateAdvert", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("AdvertId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AdvertId");

                    b.Property<Guid>("CorporateDealerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CorporateDealerId");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<decimal>("DiscountedUnitPrice")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("DiscountedUnitPrice");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductId");

                    b.Property<Guid>("PurchaseQuantityDiscountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PurchaseQuantityDiscountId");

                    b.Property<int>("StockAmount")
                        .HasColumnType("int")
                        .HasColumnName("StockAmount");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("UnitPrice");

                    b.HasKey("Id");

                    b.HasIndex("AdvertId")
                        .IsUnique();

                    b.HasIndex("CorporateDealerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseQuantityDiscountId");

                    b.ToTable("CorporateAdverts", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.CorporateAdvertOrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CorporateAdvertId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CorporateAdvertId");

                    b.Property<Guid>("CorporateAdvertOrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CorporateAdvertOrderId");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<decimal>("DiscountedProductUnitPrice")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("DiscountedProductUnitPrice");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<int>("ProductAmount")
                        .HasColumnType("int")
                        .HasColumnName("ProductAmount");

                    b.Property<decimal>("ProductUnitPrice")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("ProductUnitPrice");

                    b.HasKey("Id");

                    b.HasIndex("CorporateAdvertId");

                    b.HasIndex("CorporateAdvertOrderId");

                    b.ToTable("CorporateAdvertOrderItems", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.CorporateCustomer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("CompanyName");

                    b.Property<int>("CompanyType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CustomerId");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("TaxIdentityNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("TaxIdentityNumber");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("CorporateCustomers", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.CorporateCustomerAddress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AddressId");

                    b.Property<Guid>("CorporateCustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CorporateCustomerId");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsCenterCompany")
                        .HasColumnType("bit")
                        .HasColumnName("IsCenterCompany");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("CorporateCustomerId");

                    b.ToTable("CorporateCustomerAddresses", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.CorporateCustomerCorporateDealerComment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("Content");

                    b.Property<Guid>("CorporateCustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CorporateCustomerId");

                    b.Property<Guid>("CorporateDealerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CorporateDealerId");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.HasIndex("CorporateCustomerId");

                    b.HasIndex("CorporateDealerId");

                    b.ToTable("CorporateCustomerCorporateDealerComments", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.CorporateCustomerWholesaleAdvertComment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("Content");

                    b.Property<Guid>("CorporateCustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CorporateCustomerId");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("Title");

                    b.Property<Guid>("WholesaleAdvertId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("WholesaleAdvertId");

                    b.HasKey("Id");

                    b.HasIndex("CorporateCustomerId");

                    b.HasIndex("WholesaleAdvertId");

                    b.ToTable("CorporateCustomerWholesaleAdvertComments", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.CorporateCustomerWholesaleAdvertFavorite", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CorporateCustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CorporateCustomerId");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<Guid>("WholesaleAdvertId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("WholesaleAdvertId");

                    b.HasKey("Id");

                    b.HasIndex("CorporateCustomerId");

                    b.HasIndex("WholesaleAdvertId");

                    b.ToTable("CorporateCustomerWholesaleAdvertFavorites", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.CorporateCustomerWholesaleAdvertOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CorporateCustomerAddressId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CorporateCustomerAddressId");

                    b.Property<Guid>("CorporateCustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CorporateCustomerId");

                    b.Property<Guid>("CorporateDealerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CorporateDealerId");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<decimal>("DiscountedTotalPrice")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("DiscountedTotalPrice");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("OrderId");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("TotalPrice");

                    b.HasKey("Id");

                    b.HasIndex("CorporateCustomerAddressId");

                    b.HasIndex("CorporateCustomerId");

                    b.HasIndex("CorporateDealerId");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("CorporateCustomerWholesaleAdvertOrders", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.CorporateCustomerWholesaleAdvertVote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CorporateCustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CorporateCustomerId");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<int>("VoteType")
                        .HasColumnType("int");

                    b.Property<Guid>("WholesaleAdvertId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("WholesaleAdvertId");

                    b.HasKey("Id");

                    b.HasIndex("CorporateCustomerId");

                    b.HasIndex("WholesaleAdvertId");

                    b.ToTable("CorporateCustomerWholesaleAdvertVotes", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.CorporateDealer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("CompanyType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<Guid>("DealerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DealerId");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<Guid>("SalesCategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SalesCategoryId");

                    b.Property<string>("TaxIdentityNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DealerId")
                        .IsUnique();

                    b.ToTable("CorporateDealers", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Countries", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Customers", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.Dealer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Dealers", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.District", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CityId");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Districts", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.Identity.AuthenticationAndAuthorization.UserRefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("RefreshTokenCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("RefreshTokenCode");

                    b.Property<DateTime>("RefreshTokenExpiration")
                        .HasColumnType("datetime")
                        .HasColumnName("RefreshTokenExpiration");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserRefreshTokens");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.IndividualAdvert", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("AdvertId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AdvertId");

                    b.Property<bool>("Bargain")
                        .HasColumnType("bit")
                        .HasColumnName("Bargain");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<Guid>("IndividualDealerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IndividualDealerId");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("Price");

                    b.Property<int>("ProductConditionType")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductId");

                    b.HasKey("Id");

                    b.HasIndex("AdvertId")
                        .IsUnique();

                    b.HasIndex("IndividualDealerId");

                    b.HasIndex("ProductId");

                    b.ToTable("IndividualAdverts", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.IndividualCustomer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CustomerId");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("NationalIdentity")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("IndividualCustomers", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.IndividualCustomerAddress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AddressId");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<Guid>("IndividualCustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IndividualCustomerId");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsResidence")
                        .HasColumnType("bit")
                        .HasColumnName("IsResidence");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("IndividualCustomerId");

                    b.ToTable("IndividualCustomerAddresses", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.IndividualCustomerCorporateAdvertComment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("Content");

                    b.Property<Guid>("CorporateAdvertId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CorporateAdvertId");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<Guid>("IndividualCustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IndividualCustomerId");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.HasIndex("CorporateAdvertId");

                    b.HasIndex("IndividualCustomerId");

                    b.ToTable("IndividualCustomerCorporateAdvertComments", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.IndividualCustomerCorporateAdvertFavorite", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CorporateAdvertId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CorporateAdvertId");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<Guid>("IndividualCustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IndividualCustomerId");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.HasKey("Id");

                    b.HasIndex("CorporateAdvertId");

                    b.HasIndex("IndividualCustomerId");

                    b.ToTable("IndividualCustomerCorporateAdvertFavorites", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.IndividualCustomerCorporateAdvertOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CorporateDealerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CorporateDealerId");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<decimal>("DiscountedTotalPrice")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("DiscountedTotalPrice");

                    b.Property<Guid>("IndividualCustomerAddressId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IndividualCustomerAddressId");

                    b.Property<Guid>("IndividualCustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IndividualCustomerId");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("OrderId");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("TotalPrice");

                    b.HasKey("Id");

                    b.HasIndex("CorporateDealerId");

                    b.HasIndex("IndividualCustomerAddressId");

                    b.HasIndex("IndividualCustomerId");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("IndividualCustomerCorporateAdvertOrders", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.IndividualCustomerCorporateAdvertVote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CorporateAdvertId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CorporateAdvertId");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<Guid>("IndividualCustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IndividualCustomerId");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<int>("VoteType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CorporateAdvertId");

                    b.HasIndex("IndividualCustomerId");

                    b.ToTable("IndividualCustomerCorporateAdvertVotes", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.IndividualCustomerIndividualAdvertFavorite", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<Guid>("IndividualAdvertId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IndividualAdvertId");

                    b.Property<Guid>("IndividualCustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IndividualCustomerId");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.HasKey("Id");

                    b.HasIndex("IndividualAdvertId");

                    b.HasIndex("IndividualCustomerId");

                    b.ToTable("IndividualCustomerIndividualAdvertFavorites", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.IndividualCustomerIndividualDealerComment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("Content");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<Guid>("IndividualCustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IndividualCustomerId");

                    b.Property<Guid>("IndividualDealerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IndividualDealerId");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.HasIndex("IndividualCustomerId");

                    b.HasIndex("IndividualDealerId");

                    b.ToTable("IndividualCustomerIndividualDealerComments", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.IndividualCustomerIndividualDealerVote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<Guid>("IndividualCustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IndividualCustomerId");

                    b.Property<Guid>("IndividualDealerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IndividualDealerId");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<int>("VoteType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IndividualCustomerId");

                    b.HasIndex("IndividualDealerId");

                    b.ToTable("IndividualCustomerIndividualDealerVotes", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.IndividualDealer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<Guid>("DealerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DealerId");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.HasKey("Id");

                    b.HasIndex("DealerId")
                        .IsUnique();

                    b.ToTable("IndividualDealers", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.OperationClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("ClaimName")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("ClaimName");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.HasKey("Id");

                    b.ToTable("OperationClaims", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("Description");

                    b.Property<decimal>("DiscountedTotalPrice")
                        .HasColumnType("decimal(10,8)")
                        .HasColumnName("DiscountedTotalPrice");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(10,8)")
                        .HasColumnName("TotalPrice");

                    b.Property<Guid>("UpperOrderPriceDiscountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpperOrderPriceDiscountId");

                    b.HasKey("Id");

                    b.HasIndex("UpperOrderPriceDiscountId");

                    b.ToTable("Orders", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BrandId");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CategoryId");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.ProductDemand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CorporateDealerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CorporateDealerId");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("ProductName");

                    b.Property<string>("SenderNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("SenderNote");

                    b.HasKey("Id");

                    b.HasIndex("CorporateDealerId");

                    b.ToTable("ProductDemands", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.PurchaseQuantityDiscount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime")
                        .HasColumnName("Deadline");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsCombinable")
                        .HasColumnType("bit")
                        .HasColumnName("IsCombinable");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MaximumBuyingQuantity")
                        .HasColumnType("int")
                        .HasColumnName("MaximumBuyingQuantity");

                    b.Property<int>("MinimumBuyingQuantity")
                        .HasColumnType("int")
                        .HasColumnName("MinimumBuyingQuantity");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(4,2)")
                        .HasColumnName("Rate");

                    b.HasKey("Id");

                    b.ToTable("PurchaseQuantityDiscounts", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.ReturnedOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("OrderId");

                    b.Property<string>("ReasonDescripton")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("ReasonDescripton");

                    b.Property<int>("ReturnReasonType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("ReturnedOrders", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.RoleOperationClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<Guid>("OperationClaimId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("OperationClaimId");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("OperationClaimId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleOperationClaims", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.SwapAdvert", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("AdvertId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AdvertId");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<Guid>("IndividualDealerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IndividualDealerId");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<int>("ProductConditionType")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductId");

                    b.HasKey("Id");

                    b.HasIndex("AdvertId")
                        .IsUnique();

                    b.HasIndex("IndividualDealerId");

                    b.HasIndex("ProductId");

                    b.ToTable("SwapAdverts", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.SwapAdvertSwapableCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CategoryId");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<Guid>("SwapAdvertId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SwapAdvertId");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SwapAdvertId");

                    b.ToTable("SwapAdvertSwapableCategories", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.SwapAdvertSwapableProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductId");

                    b.Property<Guid>("SwapAdvertId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SwapAdvertId");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SwapAdvertId");

                    b.ToTable("SwapAdvertSwapableProducts", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.UpperOrderPriceDiscount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime")
                        .HasColumnName("Deadline");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsCombinable")
                        .HasColumnType("bit")
                        .HasColumnName("IsCombinable");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("MinimumOrderPrice")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("MinimumOrderPrice");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(4,2)")
                        .HasColumnName("Rate");

                    b.HasKey("Id");

                    b.ToTable("UpperOrderPriceDiscounts", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("ContactNumber");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("Email");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(MAX)")
                        .HasColumnName("PasswordHash");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(MAX)")
                        .HasColumnName("PasswordSalt");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("Status");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)")
                        .HasColumnName("UserName");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("RoleId");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.WholesaleAdvert", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("AdvertId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AdvertId");

                    b.Property<Guid>("CorporateDealerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CorporateDealerId");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<decimal>("DiscountedPricePerUnit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MaximumPurchaseAmount")
                        .HasColumnType("int")
                        .HasColumnName("MaximumPurchaseAmount");

                    b.Property<int>("MinimumPurchaseAmount")
                        .HasColumnType("int")
                        .HasColumnName("MinimumPurchaseAmount");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<decimal>("PricePerUnit")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("PricePerUnit");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductId");

                    b.Property<Guid>("PurchaseQuantityDiscountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PurchaseQuantityDiscountId");

                    b.HasKey("Id");

                    b.HasIndex("AdvertId")
                        .IsUnique();

                    b.HasIndex("CorporateDealerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseQuantityDiscountId");

                    b.ToTable("WholesaleAdverts", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.WholesaleAdvertOrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<decimal>("DiscountedProductUnitPrice")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("DiscountedProductUnitPrice");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedDate");

                    b.Property<int>("ProductAmount")
                        .HasColumnType("int")
                        .HasColumnName("ProductAmount");

                    b.Property<decimal>("ProductUnitPrice")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("ProductUnitPrice");

                    b.Property<Guid>("WholesaleAdvertId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("WholesaleAdvertId");

                    b.Property<Guid>("WholesaleAdvertOrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("WholesaleAdvertOrderId");

                    b.HasKey("Id");

                    b.HasIndex("WholesaleAdvertId");

                    b.HasIndex("WholesaleAdvertOrderId");

                    b.ToTable("WholesaleAdvertOrderItems", (string)null);
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.Address", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.City", "City")
                        .WithMany("Addresses")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ESISA.Core.Domain.Entities.Country", "Country")
                        .WithMany("Addresses")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ESISA.Core.Domain.Entities.District", "District")
                        .WithMany("Addresses")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("District");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.AdvertPhotoPath", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.Advert", "Advert")
                        .WithMany("AdvertPhotoPaths")
                        .HasForeignKey("AdvertId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Advert");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.BrandDemand", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.CorporateDealer", "CorporateDealer")
                        .WithMany("BrandDemands")
                        .HasForeignKey("CorporateDealerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CorporateDealer");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.BrandPhotoPath", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.Brand", "Brand")
                        .WithMany("BrandPhotoPaths")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.Category", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.Category", "ParentCategory")
                        .WithMany("ChildCategories")
                        .HasForeignKey("ParentCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.CategoryDemand", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.CorporateDealer", "CorporateDealer")
                        .WithMany("CategoryDemands")
                        .HasForeignKey("CorporateDealerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CorporateDealer");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.CategoryPhotoPath", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.Category", "Category")
                        .WithMany("CategoryPhotoPaths")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.City", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Country");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.CompletedOrder", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.Order", "Order")
                        .WithOne("CompletedOrder")
                        .HasForeignKey("ESISA.Core.Domain.Entities.CompletedOrder", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.CorporateAdvert", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.Advert", "Advert")
                        .WithOne("CorporateAdvert")
                        .HasForeignKey("ESISA.Core.Domain.Entities.CorporateAdvert", "AdvertId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ESISA.Core.Domain.Entities.CorporateDealer", "CorporateDealer")
                        .WithMany("CorporateAdverts")
                        .HasForeignKey("CorporateDealerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ESISA.Core.Domain.Entities.Product", "Product")
                        .WithMany("CorporateAdverts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ESISA.Core.Domain.Entities.PurchaseQuantityDiscount", "PurchaseQuantityDiscount")
                        .WithMany("CorporateAdverts")
                        .HasForeignKey("PurchaseQuantityDiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Advert");

                    b.Navigation("CorporateDealer");

                    b.Navigation("Product");

                    b.Navigation("PurchaseQuantityDiscount");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.CorporateAdvertOrderItem", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.CorporateAdvert", "CorporateAdvert")
                        .WithMany("CorporateAdvertOrderItems")
                        .HasForeignKey("CorporateAdvertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ESISA.Core.Domain.Entities.IndividualCustomerCorporateAdvertOrder", "CorporateAdvertOrder")
                        .WithMany("CorporateAdvertOrderItems")
                        .HasForeignKey("CorporateAdvertOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CorporateAdvert");

                    b.Navigation("CorporateAdvertOrder");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.CorporateCustomer", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.Customer", "Customer")
                        .WithOne("CorporateCustomer")
                        .HasForeignKey("ESISA.Core.Domain.Entities.CorporateCustomer", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.CorporateCustomerAddress", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.Address", "Address")
                        .WithMany("CorporateCustomerAddresses")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ESISA.Core.Domain.Entities.CorporateCustomer", "CorporateCustomer")
                        .WithMany("CorporateCustomerAddresses")
                        .HasForeignKey("CorporateCustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("CorporateCustomer");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.CorporateCustomerCorporateDealerComment", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.CorporateCustomer", "CorporateCustomer")
                        .WithMany("CorporateCustomerCorporateDealerComments")
                        .HasForeignKey("CorporateCustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ESISA.Core.Domain.Entities.CorporateDealer", "CorporateDealer")
                        .WithMany("CorporateCustomerCorporateDealerComments")
                        .HasForeignKey("CorporateDealerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CorporateCustomer");

                    b.Navigation("CorporateDealer");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.CorporateCustomerWholesaleAdvertComment", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.CorporateCustomer", "CorporateCustomer")
                        .WithMany("CorporateCustomerWholesaleAdvertComments")
                        .HasForeignKey("CorporateCustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ESISA.Core.Domain.Entities.WholesaleAdvert", "WholesaleAdvert")
                        .WithMany("CorporateCustomerWholesaleAdvertComments")
                        .HasForeignKey("WholesaleAdvertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CorporateCustomer");

                    b.Navigation("WholesaleAdvert");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.CorporateCustomerWholesaleAdvertFavorite", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.CorporateCustomer", "CorporateCustomer")
                        .WithMany("CorporateCustomerWholesaleAdvertFavorites")
                        .HasForeignKey("CorporateCustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ESISA.Core.Domain.Entities.WholesaleAdvert", "WholesaleAdvert")
                        .WithMany("CorporateCustomerWholesaleAdvertFavorites")
                        .HasForeignKey("WholesaleAdvertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CorporateCustomer");

                    b.Navigation("WholesaleAdvert");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.CorporateCustomerWholesaleAdvertOrder", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.CorporateCustomerAddress", "CorporateCustomerAddress")
                        .WithMany("CorporateCustomerWholesaleAdvertOrders")
                        .HasForeignKey("CorporateCustomerAddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ESISA.Core.Domain.Entities.CorporateCustomer", "CorporateCustomer")
                        .WithMany("CorporateCustomerWholesaleAdvertOrders")
                        .HasForeignKey("CorporateCustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ESISA.Core.Domain.Entities.CorporateDealer", "CorporateDealer")
                        .WithMany("CorporateCustomerWholesaleAdvertOrders")
                        .HasForeignKey("CorporateDealerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ESISA.Core.Domain.Entities.Order", "Order")
                        .WithOne("CorporateCustomerWholesaleAdvertOrder")
                        .HasForeignKey("ESISA.Core.Domain.Entities.CorporateCustomerWholesaleAdvertOrder", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CorporateCustomer");

                    b.Navigation("CorporateCustomerAddress");

                    b.Navigation("CorporateDealer");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.CorporateCustomerWholesaleAdvertVote", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.CorporateCustomer", "CorporateCustomer")
                        .WithMany("CorporateCustomerWholesaleAdvertVotes")
                        .HasForeignKey("CorporateCustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ESISA.Core.Domain.Entities.WholesaleAdvert", "WholesaleAdvert")
                        .WithMany("CorporateCustomerWholesaleAdvertVotes")
                        .HasForeignKey("WholesaleAdvertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CorporateCustomer");

                    b.Navigation("WholesaleAdvert");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.CorporateDealer", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.Address", "Address")
                        .WithMany("CorporateDealers")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ESISA.Core.Domain.Entities.Category", "Category")
                        .WithMany("CorporateDealersSalesCategory")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ESISA.Core.Domain.Entities.Dealer", "Dealer")
                        .WithOne("CorporateDealer")
                        .HasForeignKey("ESISA.Core.Domain.Entities.CorporateDealer", "DealerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Category");

                    b.Navigation("Dealer");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.Customer", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.User", "User")
                        .WithOne("Customer")
                        .HasForeignKey("ESISA.Core.Domain.Entities.Customer", "UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.Dealer", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.User", "User")
                        .WithOne("Dealer")
                        .HasForeignKey("ESISA.Core.Domain.Entities.Dealer", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.District", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.City", "City")
                        .WithMany("Districts")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.Identity.AuthenticationAndAuthorization.UserRefreshToken", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.User", "User")
                        .WithMany("UserRefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.IndividualAdvert", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.Advert", "Advert")
                        .WithOne("IndividualAdvert")
                        .HasForeignKey("ESISA.Core.Domain.Entities.IndividualAdvert", "AdvertId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ESISA.Core.Domain.Entities.IndividualDealer", "IndividualDealer")
                        .WithMany("IndividualAdverts")
                        .HasForeignKey("IndividualDealerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ESISA.Core.Domain.Entities.Product", "Product")
                        .WithMany("IndividualAdverts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Advert");

                    b.Navigation("IndividualDealer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.IndividualCustomer", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.Customer", "Customer")
                        .WithOne("IndividualCustomer")
                        .HasForeignKey("ESISA.Core.Domain.Entities.IndividualCustomer", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.IndividualCustomerAddress", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.Address", "Address")
                        .WithMany("IndividualCustomerAddresses")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ESISA.Core.Domain.Entities.IndividualCustomer", "IndividualCustomer")
                        .WithMany("IndividualCustomerAddresses")
                        .HasForeignKey("IndividualCustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("IndividualCustomer");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.IndividualCustomerCorporateAdvertComment", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.CorporateAdvert", "CorporateAdvert")
                        .WithMany("IndividualCustomerCorporateAdvertComments")
                        .HasForeignKey("CorporateAdvertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ESISA.Core.Domain.Entities.IndividualCustomer", "IndividualCustomer")
                        .WithMany("IndividualCustomerCorporateAdvertComments")
                        .HasForeignKey("IndividualCustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CorporateAdvert");

                    b.Navigation("IndividualCustomer");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.IndividualCustomerCorporateAdvertFavorite", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.CorporateAdvert", "CorporateAdvert")
                        .WithMany("IndividualCustomerCorporateAdvertFavorites")
                        .HasForeignKey("CorporateAdvertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ESISA.Core.Domain.Entities.IndividualCustomer", "IndividualCustomer")
                        .WithMany("IndividualCustomerCorporateAdvertFavorites")
                        .HasForeignKey("IndividualCustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CorporateAdvert");

                    b.Navigation("IndividualCustomer");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.IndividualCustomerCorporateAdvertOrder", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.CorporateDealer", "CorporateDealer")
                        .WithMany("IndividualCustomerCorporateAdvertOrders")
                        .HasForeignKey("CorporateDealerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ESISA.Core.Domain.Entities.IndividualCustomerAddress", "IndividualCustomerAddress")
                        .WithMany("IndividualCustomerCorporateAdvertOrders")
                        .HasForeignKey("IndividualCustomerAddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ESISA.Core.Domain.Entities.IndividualCustomer", "IndividualCustomer")
                        .WithMany("IndividualCustomerCorporateAdvertOrders")
                        .HasForeignKey("IndividualCustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ESISA.Core.Domain.Entities.Order", "Order")
                        .WithOne("IndividualCustomerCorporateAdvertOrder")
                        .HasForeignKey("ESISA.Core.Domain.Entities.IndividualCustomerCorporateAdvertOrder", "OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CorporateDealer");

                    b.Navigation("IndividualCustomer");

                    b.Navigation("IndividualCustomerAddress");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.IndividualCustomerCorporateAdvertVote", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.CorporateAdvert", "CorporateAdvert")
                        .WithMany("IndividualCustomerCorporateAdvertVotes")
                        .HasForeignKey("CorporateAdvertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ESISA.Core.Domain.Entities.IndividualCustomer", "IndividualCustomer")
                        .WithMany("IndividualCustomerCorporateAdvertVotes")
                        .HasForeignKey("IndividualCustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CorporateAdvert");

                    b.Navigation("IndividualCustomer");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.IndividualCustomerIndividualAdvertFavorite", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.IndividualAdvert", "IndividualAdvert")
                        .WithMany("IndividualCustomerIndividualAdvertFavorites")
                        .HasForeignKey("IndividualAdvertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ESISA.Core.Domain.Entities.IndividualCustomer", "IndividualCustomer")
                        .WithMany("IndividualCustomerIndividualAdvertFavorites")
                        .HasForeignKey("IndividualCustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IndividualAdvert");

                    b.Navigation("IndividualCustomer");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.IndividualCustomerIndividualDealerComment", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.IndividualCustomer", "IndividualCustomer")
                        .WithMany("IndividualCustomerIndividualDealerComments")
                        .HasForeignKey("IndividualCustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ESISA.Core.Domain.Entities.IndividualDealer", "IndividualDealer")
                        .WithMany("IndividualCustomerIndividualDealerComments")
                        .HasForeignKey("IndividualDealerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("IndividualCustomer");

                    b.Navigation("IndividualDealer");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.IndividualCustomerIndividualDealerVote", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.IndividualCustomer", "IndividualCustomer")
                        .WithMany("IndividualCustomerIndividualDealerVotes")
                        .HasForeignKey("IndividualCustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ESISA.Core.Domain.Entities.IndividualDealer", "IndividualDealer")
                        .WithMany("IndividualCustomerIndividualDealerVotes")
                        .HasForeignKey("IndividualDealerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("IndividualCustomer");

                    b.Navigation("IndividualDealer");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.IndividualDealer", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.Dealer", "Dealer")
                        .WithOne("IndividualDealer")
                        .HasForeignKey("ESISA.Core.Domain.Entities.IndividualDealer", "DealerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dealer");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.Order", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.UpperOrderPriceDiscount", "UpperOrderPriceDiscount")
                        .WithMany("Orders")
                        .HasForeignKey("UpperOrderPriceDiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UpperOrderPriceDiscount");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.Product", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ESISA.Core.Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.ProductDemand", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.CorporateDealer", "CorporateDealer")
                        .WithMany("ProductDemands")
                        .HasForeignKey("CorporateDealerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CorporateDealer");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.ReturnedOrder", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.Order", "Order")
                        .WithOne("ReturnedOrder")
                        .HasForeignKey("ESISA.Core.Domain.Entities.ReturnedOrder", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.RoleOperationClaim", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.OperationClaim", "OperationClaim")
                        .WithMany("RoleOperationClaims")
                        .HasForeignKey("OperationClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ESISA.Core.Domain.Entities.Role", "Role")
                        .WithMany("RoleOperationClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperationClaim");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.SwapAdvert", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.Advert", "Advert")
                        .WithOne("SwapAdvert")
                        .HasForeignKey("ESISA.Core.Domain.Entities.SwapAdvert", "AdvertId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ESISA.Core.Domain.Entities.IndividualDealer", "IndividualDealer")
                        .WithMany("SwapAdverts")
                        .HasForeignKey("IndividualDealerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ESISA.Core.Domain.Entities.Product", "Product")
                        .WithMany("SwapAdverts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Advert");

                    b.Navigation("IndividualDealer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.SwapAdvertSwapableCategory", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.Category", "Category")
                        .WithMany("SwapAdvertSwapableCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ESISA.Core.Domain.Entities.SwapAdvert", "SwapAdvert")
                        .WithMany("SwapAdvertSwapableCategories")
                        .HasForeignKey("SwapAdvertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("SwapAdvert");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.SwapAdvertSwapableProduct", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.Product", "Product")
                        .WithMany("SwapAdvertSwapableProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ESISA.Core.Domain.Entities.SwapAdvert", "SwapAdvert")
                        .WithMany("SwapAdvertSwapableProducts")
                        .HasForeignKey("SwapAdvertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("SwapAdvert");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.UserRole", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ESISA.Core.Domain.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.WholesaleAdvert", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.Advert", "Advert")
                        .WithOne("WholesaleAdvert")
                        .HasForeignKey("ESISA.Core.Domain.Entities.WholesaleAdvert", "AdvertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ESISA.Core.Domain.Entities.CorporateDealer", "CorporateDealer")
                        .WithMany("WholesaleAdverts")
                        .HasForeignKey("CorporateDealerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ESISA.Core.Domain.Entities.Product", "Product")
                        .WithMany("WholesaleAdverts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ESISA.Core.Domain.Entities.PurchaseQuantityDiscount", "PurchaseQuantityDiscount")
                        .WithMany("WholesaleAdverts")
                        .HasForeignKey("PurchaseQuantityDiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Advert");

                    b.Navigation("CorporateDealer");

                    b.Navigation("Product");

                    b.Navigation("PurchaseQuantityDiscount");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.WholesaleAdvertOrderItem", b =>
                {
                    b.HasOne("ESISA.Core.Domain.Entities.WholesaleAdvert", "WholesaleAdvert")
                        .WithMany("WholesaleAdvertOrderItems")
                        .HasForeignKey("WholesaleAdvertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ESISA.Core.Domain.Entities.CorporateCustomerWholesaleAdvertOrder", "WholesaleAdvertOrder")
                        .WithMany("WholesaleAdvertOrderItems")
                        .HasForeignKey("WholesaleAdvertOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WholesaleAdvert");

                    b.Navigation("WholesaleAdvertOrder");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.Address", b =>
                {
                    b.Navigation("CorporateCustomerAddresses");

                    b.Navigation("CorporateDealers");

                    b.Navigation("IndividualCustomerAddresses");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.Advert", b =>
                {
                    b.Navigation("AdvertPhotoPaths");

                    b.Navigation("CorporateAdvert")
                        .IsRequired();

                    b.Navigation("IndividualAdvert")
                        .IsRequired();

                    b.Navigation("SwapAdvert")
                        .IsRequired();

                    b.Navigation("WholesaleAdvert")
                        .IsRequired();
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.Brand", b =>
                {
                    b.Navigation("BrandPhotoPaths");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.Category", b =>
                {
                    b.Navigation("CategoryPhotoPaths");

                    b.Navigation("ChildCategories");

                    b.Navigation("CorporateDealersSalesCategory");

                    b.Navigation("Products");

                    b.Navigation("SwapAdvertSwapableCategories");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.City", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Districts");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.CorporateAdvert", b =>
                {
                    b.Navigation("CorporateAdvertOrderItems");

                    b.Navigation("IndividualCustomerCorporateAdvertComments");

                    b.Navigation("IndividualCustomerCorporateAdvertFavorites");

                    b.Navigation("IndividualCustomerCorporateAdvertVotes");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.CorporateCustomer", b =>
                {
                    b.Navigation("CorporateCustomerAddresses");

                    b.Navigation("CorporateCustomerCorporateDealerComments");

                    b.Navigation("CorporateCustomerWholesaleAdvertComments");

                    b.Navigation("CorporateCustomerWholesaleAdvertFavorites");

                    b.Navigation("CorporateCustomerWholesaleAdvertOrders");

                    b.Navigation("CorporateCustomerWholesaleAdvertVotes");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.CorporateCustomerAddress", b =>
                {
                    b.Navigation("CorporateCustomerWholesaleAdvertOrders");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.CorporateCustomerWholesaleAdvertOrder", b =>
                {
                    b.Navigation("WholesaleAdvertOrderItems");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.CorporateDealer", b =>
                {
                    b.Navigation("BrandDemands");

                    b.Navigation("CategoryDemands");

                    b.Navigation("CorporateAdverts");

                    b.Navigation("CorporateCustomerCorporateDealerComments");

                    b.Navigation("CorporateCustomerWholesaleAdvertOrders");

                    b.Navigation("IndividualCustomerCorporateAdvertOrders");

                    b.Navigation("ProductDemands");

                    b.Navigation("WholesaleAdverts");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.Country", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Cities");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.Customer", b =>
                {
                    b.Navigation("CorporateCustomer")
                        .IsRequired();

                    b.Navigation("IndividualCustomer")
                        .IsRequired();
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.Dealer", b =>
                {
                    b.Navigation("CorporateDealer")
                        .IsRequired();

                    b.Navigation("IndividualDealer")
                        .IsRequired();
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.District", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.IndividualAdvert", b =>
                {
                    b.Navigation("IndividualCustomerIndividualAdvertFavorites");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.IndividualCustomer", b =>
                {
                    b.Navigation("IndividualCustomerAddresses");

                    b.Navigation("IndividualCustomerCorporateAdvertComments");

                    b.Navigation("IndividualCustomerCorporateAdvertFavorites");

                    b.Navigation("IndividualCustomerCorporateAdvertOrders");

                    b.Navigation("IndividualCustomerCorporateAdvertVotes");

                    b.Navigation("IndividualCustomerIndividualAdvertFavorites");

                    b.Navigation("IndividualCustomerIndividualDealerComments");

                    b.Navigation("IndividualCustomerIndividualDealerVotes");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.IndividualCustomerAddress", b =>
                {
                    b.Navigation("IndividualCustomerCorporateAdvertOrders");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.IndividualCustomerCorporateAdvertOrder", b =>
                {
                    b.Navigation("CorporateAdvertOrderItems");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.IndividualDealer", b =>
                {
                    b.Navigation("IndividualAdverts");

                    b.Navigation("IndividualCustomerIndividualDealerComments");

                    b.Navigation("IndividualCustomerIndividualDealerVotes");

                    b.Navigation("SwapAdverts");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.OperationClaim", b =>
                {
                    b.Navigation("RoleOperationClaims");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.Order", b =>
                {
                    b.Navigation("CompletedOrder")
                        .IsRequired();

                    b.Navigation("CorporateCustomerWholesaleAdvertOrder")
                        .IsRequired();

                    b.Navigation("IndividualCustomerCorporateAdvertOrder")
                        .IsRequired();

                    b.Navigation("ReturnedOrder")
                        .IsRequired();
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.Product", b =>
                {
                    b.Navigation("CorporateAdverts");

                    b.Navigation("IndividualAdverts");

                    b.Navigation("SwapAdvertSwapableProducts");

                    b.Navigation("SwapAdverts");

                    b.Navigation("WholesaleAdverts");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.PurchaseQuantityDiscount", b =>
                {
                    b.Navigation("CorporateAdverts");

                    b.Navigation("WholesaleAdverts");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.Role", b =>
                {
                    b.Navigation("RoleOperationClaims");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.SwapAdvert", b =>
                {
                    b.Navigation("SwapAdvertSwapableCategories");

                    b.Navigation("SwapAdvertSwapableProducts");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.UpperOrderPriceDiscount", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.User", b =>
                {
                    b.Navigation("Customer")
                        .IsRequired();

                    b.Navigation("Dealer")
                        .IsRequired();

                    b.Navigation("UserRefreshTokens");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("ESISA.Core.Domain.Entities.WholesaleAdvert", b =>
                {
                    b.Navigation("CorporateCustomerWholesaleAdvertComments");

                    b.Navigation("CorporateCustomerWholesaleAdvertFavorites");

                    b.Navigation("CorporateCustomerWholesaleAdvertVotes");

                    b.Navigation("WholesaleAdvertOrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
